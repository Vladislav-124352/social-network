{"version":3,"sources":["components/dialogs/styles.js","components/dialogs/dialogsPage/dialogsContent/message/Message.jsx","components/dialogs/dialogsPage/dialogsContent/dialogItem/DialogItem.jsx","../node_modules/@material-ui/icons/esm/Send.js","components/dialogs/dialogsPage/dialogsContent/sendMessage/SendMessage.jsx","components/dialogs/dialogsPage/dialogsContent/DialogsContent.jsx","components/dialogs/dialogsPage/Dialogs.jsx","components/dialogs/DialogsContainer.jsx","redux/selectors/dialogs-selectors.js"],"names":["useDialogsStyles","makeStyles","theme","dialgos","dialogs_$wrapper","paddingTop","height","breakpoints","down","dialogs__content_$wrapper","padding","backgroundColor","overflowY","maxHeight","dialogs__content","display","flexDirection","alignItems","justifyContent","dialogs__conversations","width","conversations","overflow","dialogs__messages","position","top","marginLeft","marginTop","dialogs_$dialog","maxWidth","dialog_$wrapper","borderRadius","dialog__nameLink","color","content","left","right","bottom","dialog__nameLink_$selected","dialog__logo","marginRight","dialog__preContent","dialog_$avatar","dialog_$name","textOverflow","textAlign","fontSize","messages__content","paddingBottom","messages_$wrapper","message_$wrapper","minHeight","background","message__user_$avatar","message__content","message__text","overflowWrap","messages__correspond","sendMessage","Message","memo","fullName","userId","message","userMessageLogo","message__user_$name","className","Box","aria-label","to","Avatar","alt","src","Typography","variant","DialogItem","id","name","sendersUserLogo","Button","activeClassName","noWrap","createSvgIcon","React","createElement","d","maxValueLength300","maxLengthSymbols","SendMessage","compose","reduxForm","form","handleSubmit","onSubmit","FormInputField","component","InputStandard","validations","required","castomize","type","size","style","placeholder","inputMode","Send","DialogsContent","conversationsData","messagesData","sendMyMessageT","loginName","photos","useCallback","formData","conversationsList","loopThroughArrayWithCallback","key","messagesList","data","Paper","Dialogs","props","dialogs","title","LocationPage","location","onRender","profilerOnRender","connect","state","dialogsPage","messages","getUserId","getLoginName","getUserLogoPhotos","withAuthRedirect"],"mappings":"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","file":"static/js/5.ed200ebd.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\nexport const useDialogsStyles = makeStyles((theme) => ({\r\n\r\n    dialgos: {},\r\n\r\n    dialogs_$wrapper: {\r\n        paddingTop: '20px',\r\n        height: '70vh',\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingTop: '0',\r\n            height: '74vh'\r\n        }\r\n    },\r\n\r\n    dialogs__content_$wrapper: {\r\n        padding: '15px',\r\n        backgroundColor: '#ffffff',\r\n        overflowY: 'auto',\r\n        maxHeight: '100%',\r\n    },\r\n\r\n    dialogs__content: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexDirection: 'column',\r\n            alignItems: 'stretch'\r\n        }\r\n    },\r\n\r\n    dialogs__conversations: {\r\n        padding: '10px 0',\r\n        backgroundColor: '#e7e7e7',\r\n        width: '36%',\r\n        [theme.breakpoints.down('1100')]: {\r\n            width: '35%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%',\r\n            padding: '0'\r\n        }\r\n    },\r\n\r\n    conversations: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'stretch',\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexDirection: 'row',\r\n            overflow: 'auto'\r\n        }\r\n    },\r\n\r\n    dialogs__messages: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'stretch',\r\n        position: 'sticky',\r\n        top: '0',\r\n        width: '64%',\r\n        height: '60vh',\r\n        marginLeft: '15px',\r\n        backgroundColor: '#e7e7e7',\r\n        [theme.breakpoints.down('1100')]: {\r\n            width: '65%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%',\r\n            height: '53vh',\r\n            marginLeft: '0',\r\n            marginTop: '15px',\r\n            top: 'auto',\r\n            position: 'relative'\r\n        },\r\n        [theme.breakpoints.down('768')]: {\r\n            height: '50vh'\r\n        }\r\n    },\r\n\r\n    dialogs_$dialog: {\r\n        width: '100%',\r\n        height: '100px',\r\n        display: 'flex',\r\n        alignItems: 'stretch',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#e7e7e7',\r\n        '&:hover': {\r\n            backgroundColor: '#dddddd'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: '100%'\r\n        },\r\n        [theme.breakpoints.down('768')]: {\r\n            maxWidth: '120px'\r\n        }\r\n    },\r\n\r\n    dialog_$wrapper: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'stretch',\r\n        padding: '15px',\r\n        borderRadius: '0px',\r\n        [theme.breakpoints.down('768')]: {\r\n            display: 'flow-root',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }\r\n    },\r\n\r\n    dialog__nameLink: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start',\r\n        color: '#333333',\r\n        '&::before': {\r\n            content: \"''\",\r\n            position: 'absolute',\r\n            top: '0',\r\n            left: '0',\r\n            right: '0',\r\n            bottom: '0',\r\n        }\r\n    },\r\n\r\n    dialog__nameLink_$selected: {\r\n        color: '#0f41c5',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start'\r\n    },\r\n\r\n    dialog__logo: {\r\n        marginRight: '15px',\r\n        [theme.breakpoints.down('768')]: {\r\n            marginRight: '0',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'stretch',\r\n        }\r\n    },\r\n\r\n    dialog__preContent: {\r\n        width: '100%',\r\n        maxWidth: '100%',\r\n        overflow: 'hidden',\r\n        [theme.breakpoints.down('768')]: {\r\n            maxWidth: '90px'\r\n        }\r\n    },\r\n\r\n    dialog_$avatar: {\r\n        width: '50px',\r\n        height: '50px',\r\n        [theme.breakpoints.down('1100')]: {\r\n            width: '40px',\r\n            height: '40px',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '30px',\r\n            height: '30px',\r\n        }\r\n    },\r\n\r\n    dialog_$name: {\r\n        textOverflow: 'ellipsis',\r\n        textAlign: 'left',\r\n        width: '100%',\r\n        [theme.breakpoints.down('768')]: {\r\n            textAlign: 'center',\r\n            fontSize: '15px'\r\n        }\r\n    },\r\n\r\n    messages__content: {\r\n        height: '100%',\r\n        padding: '10px',\r\n        paddingBottom: '20px',\r\n        overflow: 'auto',\r\n        maxWidth: '100%'\r\n    },\r\n\r\n    messages_$wrapper: {\r\n        height: '100%',\r\n        overflow: 'auto',\r\n        maxWidth: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'stretch'\r\n    },\r\n\r\n    message_$wrapper: {\r\n        minHeight: '40px',\r\n        maxWidth: '100%',\r\n        padding: '10px',\r\n        background: 'transparent',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start'\r\n    },\r\n\r\n    message__user_$avatar: {\r\n        borderRadius: '100%'\r\n    },\r\n\r\n    message__content: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start',\r\n        marginLeft: '10px'\r\n    },\r\n\r\n    message__text: {\r\n        maxWidth: '300px',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        overflowWrap: 'break-word',\r\n        [theme.breakpoints.down('1100')]: {\r\n            maxWidth: '280px'\r\n        },\r\n    },\r\n\r\n    messages__correspond: {\r\n        maxWidth: '100%',\r\n        padding: '10px'\r\n    },\r\n\r\n    sendMessage: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'stretch'\r\n    },\r\n}))","import { Avatar, Box, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { memo } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDialogsStyles } from '../../../styles';\r\n\r\nexport const Message = memo(({\r\n    fullName,\r\n    userId,\r\n    message,\r\n    userMessageLogo\r\n}) => {\r\n\r\n    const {\r\n        message_$wrapper,\r\n        message__content,\r\n        message__user_$avatar,\r\n        message__user_$name,\r\n        message__text\r\n    } = useDialogsStyles()\r\n\r\n    return (\r\n        <li className={message_$wrapper}>\r\n            <Box className={message__user_$avatar}>\r\n                <NavLink aria-label={`User link - ${fullName}`} to={`/profile/${userId}`}>\r\n                    <Avatar alt='avatar' src={userMessageLogo} />\r\n                </NavLink>\r\n            </Box>\r\n            <Box className={message__content}>\r\n                <Box className={message__user_$name}>\r\n                    <Typography>\r\n                        <NavLink aria-label={`User link - ${fullName}`} to={`/profile/${userId}`} >\r\n                            {fullName}\r\n                        </NavLink>\r\n                    </Typography>\r\n                </Box>\r\n                <Box className={message__text}>\r\n                    <Typography variant='body2'>\r\n                        {message}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n        </li>\r\n    );\r\n});","import { Avatar, Box, Button, Typography } from '@material-ui/core';\r\nimport React, { memo } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDialogsStyles } from '../../../styles';\r\n\r\nexport const DialogItem = memo(({\r\n    id,\r\n    name,\r\n    sendersUserLogo\r\n}) => {\r\n\r\n    const {\r\n        dialogs_$dialog,\r\n        dialog_$wrapper,\r\n        dialog__nameLink,\r\n        dialog__nameLink_$selected,\r\n        dialog__preContent,\r\n        dialog__logo,\r\n        dialog_$avatar,\r\n        dialog_$name,\r\n    } = useDialogsStyles();\r\n\r\n    return (\r\n        <li className={dialogs_$dialog}>\r\n            <Button className={dialog_$wrapper}>\r\n                <Box className={dialog__logo}>\r\n                    <Avatar\r\n                        alt='sendersUserLogo'\r\n                        className={dialog_$avatar}\r\n                        src={sendersUserLogo} />\r\n                </Box>\r\n                <Box className={dialog__preContent}>\r\n                    <NavLink\r\n                        to={`/dialogs/${id}`}\r\n                        className={dialog__nameLink}\r\n                        activeClassName={dialog__nameLink_$selected}\r\n                        aria-label={`Dialogue with the user - ${name}`}>\r\n                        <Typography noWrap className={dialog_$name}>\r\n                            {name}\r\n                        </Typography>\r\n                    </NavLink>\r\n                </Box>\r\n            </Button>\r\n        </li>\r\n    );\r\n});","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');","import { Button } from '@material-ui/core';\r\nimport React, { memo } from 'react';\r\nimport { compose } from 'redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport { FormInputField } from '../../../../common/inputs/formInputField/FormInputField';\r\nimport { InputStandard } from '../../../../common/inputs/inputStandard/InputStandard';\r\nimport { useDialogsStyles } from '../../../styles';\r\nimport { Send } from '@material-ui/icons';\r\nimport { required, maxLengthSymbols } from '../../../../common/inputs/validate/ValidateInput';\r\n\r\nconst maxValueLength300 = maxLengthSymbols(300)\r\n\r\nexport const SendMessageContent = ({\r\n    handleSubmit\r\n}) => {\r\n\r\n    const { sendMessage } = useDialogsStyles()\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={sendMessage}>\r\n            <FormInputField\r\n                name='addMessage'\r\n                component={InputStandard}\r\n                validations={[required, maxValueLength300]}\r\n                castomize={{\r\n                    type: 'text',\r\n                    size: 'small',\r\n                    variant: 'outlined',\r\n                    style: {\r\n                        width: '100%',\r\n                        marginRight: '10px'\r\n                    },\r\n                    placeholder: 'Write a message...',\r\n                    inputMode: 'text'\r\n                }} />\r\n            <Button type='submit'>\r\n                <Send />\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const SendMessage = compose(\r\n    reduxForm({ form: 'dialogs-message' }),\r\n    memo\r\n)(SendMessageContent)","import { Box, Paper } from '@material-ui/core';\r\nimport { Message } from './message/Message';\r\nimport React, { useCallback } from 'react';\r\nimport { useDialogsStyles } from '../../styles';\r\nimport { DialogItem } from './dialogItem/DialogItem';\r\nimport { SendMessage } from './sendMessage/SendMessage';\r\nimport { memo } from 'react';\r\nimport { loopThroughArrayWithCallback } from '../../../../utils/arrayFunctions/loopThroughArrayWithCallback';\r\n\r\nexport const DialogsContent = memo(({\r\n    conversationsData,\r\n    messagesData,\r\n    sendMyMessageT,\r\n    id,\r\n    loginName,\r\n    photos\r\n}) => {\r\n\r\n    const {\r\n        dialogs_$wrapper,\r\n        dialogs__content_$wrapper,\r\n        dialogs__content,\r\n        dialogs__conversations,\r\n        conversations,\r\n        dialogs__messages,\r\n        messages_$wrapper,\r\n        messages__content,\r\n        messages__correspond\r\n    } = useDialogsStyles()\r\n\r\n    const sendMessage = useCallback((formData) => {\r\n        return sendMyMessageT(formData, id, photos, loginName)\r\n    }, [sendMyMessageT, id, photos, loginName])\r\n\r\n    const conversationsList = loopThroughArrayWithCallback(\r\n        conversationsData,\r\n        ({ id, name, sendersUserLogo }) => (\r\n            <DialogItem\r\n                key={`dialohItem_${id}`}\r\n                id={id}\r\n                name={name}\r\n                sendersUserLogo={sendersUserLogo} />\r\n        )\r\n    )\r\n\r\n    const messagesList = loopThroughArrayWithCallback(\r\n        messagesData,\r\n        ({ id, ...data }) => (\r\n            <Message key={`message_${id}`} {...data} />\r\n        )\r\n    )\r\n\r\n    return (\r\n        <section className={dialogs_$wrapper}>\r\n            <Paper className={dialogs__content_$wrapper}>\r\n                <Box className={dialogs__content}>\r\n                    <Paper className={dialogs__conversations}>\r\n                        <ul className={conversations}>\r\n                            {[...conversationsList]}\r\n                        </ul>\r\n                    </Paper>\r\n                    <Paper className={dialogs__messages}>\r\n                        <Box className={messages_$wrapper}>\r\n                            <ul className={messages__content}>\r\n                                {[...messagesList]}\r\n                            </ul>\r\n                        </Box>\r\n                        <Box className={messages__correspond}>\r\n                            <SendMessage onSubmit={sendMessage} />\r\n                        </Box>\r\n                    </Paper>\r\n                </Box>\r\n            </Paper>\r\n        </section>\r\n    );\r\n});","import { Box } from '@material-ui/core';\r\nimport React, { Profiler } from 'react';\r\nimport { memo } from 'react';\r\nimport DocumentTitle from 'react-document-title';\r\nimport { LocationPage } from '../../common/locationPage/LocationPage';\r\nimport { profilerOnRender } from '../../common/profiler/profilerOnRender';\r\nimport { useDialogsStyles } from '../styles';\r\nimport { DialogsContent } from './dialogsContent/DialogsContent';\r\n\r\nexport const Dialogs = memo((props) => {\r\n\r\n    const {\r\n        dialogs,\r\n    } = useDialogsStyles()\r\n\r\n    return (\r\n        <Box className={dialogs}>\r\n            <DocumentTitle title='Dialogs' />\r\n            <LocationPage location='Dialogs' />\r\n            <Profiler id='dialogs-profiler' onRender={profilerOnRender}>\r\n                <DialogsContent {...props} />\r\n            </Profiler>\r\n        </Box>\r\n    );\r\n});","import React, { memo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { sendMyMessageT } from '../../redux/reducers/dialogs-reducer';\r\nimport { getLoginName, getUserId, getUserLogoPhotos } from '../../redux/selectors/auth-selectors';\r\nimport { getConversationsData, getMessagesData } from '../../redux/selectors/dialogs-selectors';\r\nimport { withAuthRedirect } from '../common/hoc/withAuthRedirect/withAuthRedirect';\r\nimport { Dialogs } from './dialogsPage/Dialogs';\r\n\r\nconst DialogsContainer = (props) => {\r\n    return <Dialogs {...props} />\r\n};\r\n\r\nexport default compose(\r\n    connect((state) => ({\r\n        conversationsData: getConversationsData(state),\r\n        messagesData: getMessagesData(state),\r\n        id: getUserId(state),\r\n        loginName: getLoginName(state),\r\n        photos: getUserLogoPhotos(state),\r\n    }), {\r\n        sendMyMessageT\r\n    }),\r\n    memo,\r\n    withAuthRedirect\r\n)(DialogsContainer, 'login', 'invert')","export const getConversationsData = ({ dialogsPage: { conversationsData } }) => {\r\n    return conversationsData\r\n},\r\n\r\n    getMessagesData = ({ dialogsPage: { messages: { messagesData } } }) => {\r\n        return messagesData\r\n    }"],"sourceRoot":""}